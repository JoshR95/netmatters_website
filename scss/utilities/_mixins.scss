////////////////////////////////////////////////////////////////////
/// HOVER-MOVE (MAKES AN ELEMENT MOVE UP 10PX'S WHEN HOVERED OVER)
////////////////////////////////////////////////////////////////////


// the top needs to have a relative postioning so the top: 0 can work
// the two arguments in parenthesis is what moves it when hovered 
@mixin hover-move($hover-distance: -10px, $transition-time: 0.5s) {
    position: relative;
    top: 0;
    transition: top $transition-time ease;
    text-decoration: none;

    &:hover {
        top: $hover-distance;
        transition: top $transition-time ease;
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// TURN-PICTURE-COLORED -  THIS SET THE PICTURES GREYSCALE TO 100% AND TURNS IT OFF WHEN HOVERED OVER
///////////////////////////////////////////////////////////////////////////////////////////////////////////


// this mixin sets all imgs 
@mixin turn-picture-colored {
    img {
      filter: grayscale(100%);
      transition: filter 0.3s ease;
    }
  
    &:hover img {
      filter: grayscale(0%);
    }
  }

///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// BUTTON-HOVER - THIS TURNS THINGS A SLIGHLT DIFFERENT COLOR WHEN HOVERED OVER
//////////////////////////////////////////////////////////////////////////////////////////////////////////


@mixin button-hover($color) {
  transition: background-color 0.3s ease; // Smooth transition 
  
  &:hover {
      background-color: darken($color, 10%); // DarkenS the original color by 10% 
      color: white; // Optional: change text color on hover 
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// BUTTON MIXIN
////////////////////////////////////////////////////////////////////////////////////////////////////////////

@mixin BtnTemplate($BtnTemplate-primary-color){
  background-color: $BtnTemplate-primary-color;
  display: inline-block;
  text-decoration: none;
  height: auto;
  line-height: 35px;
  padding: 5px 15px;
  text-transform: uppercase;
  font-size: 1.063rem;
  border-radius: 3px;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// BANNER HOVER COLOUR
////////////////////////////////////////////////////////////////////////////////////////////////////////////

// ive made a mixin to easily add colours to the different dropdowns and not repeat code.
@mixin bannerDropdown($primaryColor, $secondaryColor, $serviceName, $iconClass) {

  // sets the icons icon color before hover based on the string given in the scss using scss string interpolation '#{$iconClass}'
  .banner-avatar.#{$iconClass} { 
    color: $primaryColor;
  }

  // sets the hover colour for each items background in the dropdown bar
  .banner-#{$serviceName} {
    &:hover {
      background-color: $primaryColor;
      .banner-avatar {
        color: $primary-white;
      }
    }
  }

  // sets the arrow color the serviceName is using string interpolation to target the right element
  .banner-dropdown > li.banner-#{$serviceName} > a:first-child::after { 
    border-top-color: $primaryColor; 
  }
  
  // sets the background colour of the big dropdown depending on service name given
  .inner-#{$serviceName} { 
    background-color: $secondaryColor;
  }
}